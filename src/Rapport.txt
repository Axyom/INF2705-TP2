Q1: Dans le nuanceur de sommets, si on souhaite calculer la profondeur du
    sommet dans le repère de la caméra, on peut utiliser cette formule :

    « out float profondeur = -( matrVisu * matrModel * Vertex ).z; »

    Pourquoi doit-on inverser le signe du résultat calculé ?

    L'axe z pointe vers la caméra. Quand on représente les coordonnées des objets à l'écran dans
    le repère, leur profondeur (z) est donc négative. On effectue donc une négation pour retrouver
    une valeur positive.


Q2: Pourquoi ne peut-on pas utiliser le même programme de nuanceurs que pour
    les poissons pour voir l'aquarium (et surtout ses côtés!) dans les deux
    vues? On peut bien sûr ajouter diverses variables de contrôle pour dire
    de ne pas faire de découpage avec les plans glClipPlane ou pour indiquer
    de ne pas modifier les couleurs, mais le programme de nuanceurs des
    poissons ne fonctionnera pas correctement pour afficher l'aquarium et
    ses côtés. Pourquoi?

    Contrairement au pipeline utilisé pour l'aquarium, le pipeline des poissons comprend un nuanceur
    de géométrie. Le problème survient lorsqu'on veut tracer les lignes blanches symbolisant les
    bords de l'aquarium. Dans le nuanceur de géométrie, on prend en entrée des triangles et nous
    produisons en sortie un triangle strip. Ces primitives seraient incompatibles avec les lignes du
    bord de l'aquarium.
    Cela est impossible à corriger avec des uniform, car cela relève de la structure du pipeline, d'où
    l'intêret d'utiliser deux programmes de shaders.
